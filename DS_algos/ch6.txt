What is the time complexity for the following function? How could it be edited
for the best- and average-case scenarios to make it more efficient?
function containsX(string) {
  foundX = false;

  for (let i = 0; i < string.length; i++) {
    if (string[i] === “X”) {
      foundX = true;
    }
  }

  return foundX;
}

Time complexity: O(N)
Explanation:
The function iterates over every character in the given string regardless of whether
the function finds an “X” character earlier on in the string or not. For the best- and
average-case scenarios, there will be an “X” earlier on in the string, so we don’t have 
to iterate through all the characters. To refactor for best- and average-case change 
the if statement to return true instead of reassigning foundX to true to end the function
early. 

